{"version":3,"sources":["components/Container.js","components/Jumbotron.js","components/Search.js","components/Table.js","utils/API.js","pages/MainPage/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","children","className","Jumbotron","Search","searchVal","onChangeHandler","type","placeholder","aria-label","onChange","value","name","Table","Thead","Th","scope","Tbody","Tr","Td","API","getPeople","axios","get","MainPage","useState","people","setPeople","filtered","setFiltered","sortAsc","setSortAsc","search","setSearch","useEffect","then","data","results","catch","err","console","log","e","target","peopleSearch","filter","item","last","toLowerCase","indexOf","onClick","sort","a","b","first","firts","dob","age","map","i","key","src","picture","medium","alt","firstName","href","email","phone","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7679c9a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Container({ children }){\r\n\r\n\r\n    return (\r\n        <div className=\"container\">{children}</div>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\n\r\nfunction Jumbotron({ children }){\r\n\r\n\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4 text-center\">Employee Management</h1>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Jumbotron;","\r\n\r\n\r\nimport React from \"react\";\r\n\r\n\r\nfunction Search({ searchVal, onChangeHandler }){\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark mt-5 d-flex justify-content-center\">\r\n            <form className=\"form-inline\">\r\n                <input \r\n                className=\"form-control mr-sm-2\" \r\n                type=\"search\" \r\n                placeholder=\"Search By Last Name\" \r\n                aria-label=\"Search\"\r\n                onChange={onChangeHandler}\r\n                value={searchVal}\r\n                name=\"search\"\r\n                />\r\n            </form>\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\n\r\nfunction Table({ children }){\r\n\r\n    return (\r\n        <table className=\"table\">{ children }</table>\r\n    )\r\n}\r\nfunction Thead({ children }){\r\n\r\n    return (\r\n        <thead>{ children }</thead>\r\n    )\r\n}\r\nfunction Th({ children }){\r\n\r\n    return (\r\n        <th scope=\"col\">{ children }</th>\r\n    )\r\n}\r\nfunction Tbody({ children }){\r\n\r\n    return (\r\n        <tbody>{ children }</tbody>\r\n    )\r\n}\r\n\r\n\r\nfunction Tr({ children }){\r\n\r\n    return (\r\n        <tr>{ children }</tr>\r\n    )\r\n}\r\n\r\nfunction Td({ children }){\r\n    return (\r\n        <td className=\"td\">{ children }</td>\r\n    )\r\n}\r\n\r\nexport { Table, Thead, Th, Tbody, Tr, Td };","import axios from \"axios\";\r\n\r\nconst API = {\r\n    getPeople: function(){\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\r\n    }\r\n}\r\n\r\nexport default API;\r\n","import React,  { useState, useEffect } from \"react\";\r\nimport Container from \"../../components/Container\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport Search from \"../../components/Search\";\r\nimport { Table, Thead, Th, Tbody, Tr, Td } from \"../../components/Table\";\r\nimport API from \"../../utils/API\";\r\n\r\n\r\n\r\n\r\nfunction MainPage() {\r\n\r\n    const [people, setPeople] = useState([]);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [sortAsc, setSortAsc] = useState([]);\r\n    const [search, setSearch ] = useState(\"\")\r\n\r\n    const getRandomPeople = () => {\r\n        API.getPeople()\r\n            .then(data => {\r\n                setPeople(data.data.results)\r\n                setFiltered(data.data.results)\r\n            })\r\n            .catch(err => { console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRandomPeople()\r\n    }, [])\r\n    \r\n    const sortByFirstName = () => {\r\n        \r\n        if (sortAsc){\r\n            filtered.sort((a, b) => (b.name.first > a.name.firts) ? 1 : -1)\r\n            setSortAsc(false)\r\n          \r\n        } else {\r\n            filtered.sort((a, b) => (a.name.first > b.name.first) ? 1 : -1)\r\n            setSortAsc(true)\r\n        }\r\n        setFiltered(filtered)\r\n    }\r\n    const sortByLastName = () => {\r\n        \r\n        if (sortAsc){\r\n            filtered.sort((a, b) => (b.name.last > a.name.last) ? 1 : -1)\r\n            setSortAsc(false)\r\n        } else {\r\n            filtered.sort((a, b) => (a.name.last > b.name.last) ? 1 : -1)\r\n            setSortAsc(true)\r\n        }\r\n        setFiltered(filtered)\r\n    }\r\n\r\n    const sortByAge = () => {\r\n        \r\n        if (sortAsc){\r\n            filtered.sort((a, b) => (b.dob.age > a.dob.age) ? 1 : -1)\r\n            setSortAsc(false)\r\n        } else {\r\n            filtered.sort((a, b) => (a.dob.age > b.dob.age) ? 1 : -1)\r\n            setSortAsc(true)\r\n        }\r\n        setFiltered(filtered)\r\n    }\r\n\r\n    const onChangeHandler = e => {\r\n        \r\n        setSearch(e.target.value)\r\n        let peopleSearch = people.filter(item => {\r\n            let values = item.name.last.toLowerCase();\r\n            return ( values.indexOf(e.target.value) !== -1 ) \r\n        })\r\n        setFiltered(peopleSearch)\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n        <Jumbotron>\r\n            <Search \r\n                searchVal = {search}\r\n                onChangeHandler = {onChangeHandler}\r\n            />\r\n        </Jumbotron>\r\n        <Container>\r\n            <Table>\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th></Th>\r\n                        <Th>First Name <i className=\"fas fa-sort\" onClick={sortByFirstName}></i></Th>\r\n                        <Th>Last Name <i className=\"fas fa-sort\" onClick={sortByLastName}></i></Th>\r\n                        <Th>Email</Th>\r\n                        <Th>Phone</Th>\r\n                        <Th>Age <i className=\"fas fa-sort\" onClick={sortByAge}></i></Th>\r\n                    </Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                {filtered.map((item, i) => (\r\n                    <Tr key={i}>\r\n                        <Td><img src={item.picture.medium} alt={item.firstName}/></Td>\r\n                        <Td>{item.name.first}</Td>\r\n                        <Td>{item.name.last}</Td>\r\n                        <Td><a href={\"mailto:\"+item.email}>{item.email}</a></Td>\r\n                        <Td>{item.phone}</Td>\r\n                        <Td>{item.dob.age}</Td>\r\n                    </Tr>\r\n                ))}\r\n                </Tbody>\r\n            </Table>\r\n        </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MainPage;\r\n","import React from 'react';\nimport './App.css';\nimport MainPage from \"./pages/MainPage\"\n\nfunction App() {\n  return (\n    <MainPage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}